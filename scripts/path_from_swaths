#!/usr/bin/env python3
import os
import sys
import argparse
from romea_path_tools.f2c_path_generator import PathGenerator


def parse_args():
    parser = argparse.ArgumentParser(
        prog=os.path.basename(sys.argv[0]),
        description="Generate a path from a CSV file containing swaths",
    )
    parser.add_argument(
        "input_path", type=str, help="input CSV or geojson file containing the swaths"
    )
    parser.add_argument("path", type=str, help="output path file")
    return parser.parse_args()


def main():
    args = parse_args()
    operation_width = 1.58
    # min_radius = 3.5
    min_radius = 3.2
    robot_width = 1.0

    if operation_width < robot_width:
        robot_width = operation_width

    pg = PathGenerator(robot_width, operation_width, min_radius)

    if args.input_path.endswith(".csv"):
        pg.create_swaths_from_csv(args.input_path)
    elif args.input_path.endswith(".geojson"):
        pg.create_swaths_from_geojson(args.input_path)
    else:
        raise ValueError("Unsupported file format. Please use .csv or .geojson files.")

    pg.path_planning()

    print(f"nb swaths: {pg.swaths.size()}")
    print(f"nb generated points: {pg.path.size()}")
    print(f"WGS84 origin: {pg.origin}")
    pg.export_path(args.path)


if __name__ == "__main__":
    main()
